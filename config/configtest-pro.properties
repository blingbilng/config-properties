##springCloud
spring.application.name=configtest
##spring
server.port=8011
word=hello world
#
###druid-dataSource
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.url=jdbc:mysql://192.168.3.18:3306/yuncun_message?useUnicode=true&amp;relaxAutoCommit=true&amp;zeroDateTimeBehavior=convertToNull&amp;characterEncoding=utf8mb4&amp&allowMultiQueries=true
#spring.datasource.username=root
#spring.datasource.password=rshealth2019
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.initialSize=5
#spring.datasource.minIdle=5
#spring.datasource.maxActive=20
#spring.datasource.maxWait=60000
#spring.datasource.timeBetweenEvictionRunsMillis=60000
#spring.datasource.minEvictableIdleTimeMillis=300000
#spring.datasource.validationQuery=SELECT 1 FROM DUAL
#spring.datasource.testWhileIdle=true
#spring.datasource.testOnBorrow=false
#spring.datasource.testOnReturn=false
#spring.datasource.filters=stat,wall,log4j
#spring.datasource.logSlowSql=true
###mybatis:
#mybatis-plus.configuration.map-underscore-to-camel-case=true
#mybatis-plus.mapper-locations=classpath:mappers/*.xml
#mybatis-plus.type-aliases-package=com.rsd.healthPro.message.pojo.entity
#pagehelper.helper-dialect=mysql
#pagehelper.support-methods-arguments=false
#pagehelper.params=count=countSql
###redis
#spring.redis.database=0
#spring.redis.host=192.168.3.18
#spring.redis.port=6379
#spring.redis.password = healthpro2019
#spring.redis.pool.max-idle=20
#spring.redis.pool.min-idle=1
#spring.redis.pool.max-active=8
#spring.redis.pool.max-wait=1000
#spring.redis.timeout=0
##============== kafka ==============================================
#spring.kafka.bootstrap-servers=192.168.3.18:9092
##============== provider ====================
#spring.kafka.producer.retries=0
#spring.kafka.producer.batch-size=16384
#spring.kafka.producer.buffer-memory=33554432
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
##============== consumer ====================
#spring.kafka.consumer.group-id=message-consumer-group
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.consumer.auto-commit-interval=1000
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
##spring.mvc.view.prefix=/templates/
##spring.mvc.view.suffix=.ftl
##============== aliyun-server [sms & oss] ==========================================
#server.aliyun.accessKeyId=LTAIehuLTGSumxYU
#server.aliyun.accessSecret=fNjX1QvtPU1I7xFXD7atiL9ai8N1w9
##============ oss ===========
#oss.aliyun.endpoint=oss-cn-hangzhou.aliyuncs.com
#oss.aliyun.file.bucket=healthpro-local
##============ swagger2是否启用=============
#swagger.enable=true
#
##quartz集群配置
## ===========================================================================
## Configure Main Scheduler Properties 调度器属性
## ===========================================================================
##调度标识名 集群中每一个实例都必须使用相同的名称
#org.quartz.scheduler.instanceName=MessageScheduler
##ID设置为自动获取 每一个必须不同
#org.quartz.scheduler.instanceId=AUTO
#org.quartz.scheduler.jobFactory.class=org.quartz.simpl.SimpleJobFactory
##============================================================================
## Configure ThreadPool
##============================================================================
##线程池的实现类（一般使用SimpleThreadPool即可满足几乎所有用户的需求）
#org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
##指定线程数，至少为1（无默认值）(一般设置为1-100直接的整数合适)
#org.quartz.threadPool.threadCount = 25
##设置线程的优先级（最大为java.lang.Thread.MAX_PRIORITY 10，最小为Thread.MIN_PRIORITY 1，默认为5）
#org.quartz.threadPool.threadPriority = 5
##============================================================================
## Configure JobStore
##============================================================================
## 信息保存时间 默认值60秒
#org.quartz.jobStore.misfireThreshold = 60000
##数据保存方式为数据库持久化
#org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
##数据库代理类，一般org.quartz.impl.jdbcjobstore.StdJDBCDelegate可以满足大部分数据库
#org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
##JobDataMaps是否都为String类型
#org.quartz.jobStore.useProperties = false
##数据库别名 随便取
#org.quartz.jobStore.dataSource = quartzDataSource
##表的前缀，默认QRTZ_
#org.quartz.jobStore.tablePrefix = QRTZ_
##是否加入集群
#org.quartz.jobStore.isClustered = true
##调度实例失效的检查时间间隔
#org.quartz.jobStore.clusterCheckinInterval = 20000
##============================================================================
## Configure Datasources
##============================================================================
##数据库引擎
#org.quartz.dataSource.quartzDataSource.driver = com.mysql.jdbc.Driver
##数据库连接
#org.quartz.dataSource.quartzDataSource.URL = jdbc:mysql://192.168.3.18:3306/yuncun_message?useUnicode=true&amp;relaxAutoCommit=true&amp;zeroDateTimeBehavior=convertToNull&amp;characterEncoding=utf8mb4&amp&allowMultiQueries=true
##数据库用户
#org.quartz.dataSource.quartzDataSource.user = root
##数据库密码
#org.quartz.dataSource.quartzDataSource.password = rshealth2019
##允许最大连接
#org.quartz.dataSource.quartzDataSource.maxConnections = 5
##验证查询sql,可以不设置
#org.quartz.dataSource.quartzDataSource.validationQuery=select 0 from dual







